#lang racket

;<expr> -> <term> | <expr> + <term> | <expr> - <term>
;<term> -> <factor> | <term> * <factor> | <term> / <factor>
;<factor> -> <power> | <factor> * <power>
;<power> -> <unary> | <power> ! | <power> % | <power> ^ <unary>
;<unary> -> <negative> | <unary> !
;<negative> -> - <atom> | <atom>
;<atom> -> <number> | (<expr>)
;<number> -> <digit> | <number> <digit>
;<digit> -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9